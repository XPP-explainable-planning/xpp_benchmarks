(_10_neg: (T0_init ( (! (holding(b0,h0))) ) -> T0_init)
(unstack b3 b5 h0 level5 level1 level6)
(_10_neg: (T0_init ( (! (holding(b0,h0))) ) -> T0_init)
(unstack b5 b2 h1 level5 level1 level6)
(_10_neg: (T0_init ( (! (holding(b0,h0))) ) -> T0_init)
(stack b5 b0 h1 level4 level1 level5)
(_10_neg: (T0_init ( (! (holding(b0,h0))) ) -> T0_init)
(unstack b2 b4 h1 level3 level1 level4)
(_10_neg: (T0_init ( (! (holding(b0,h0))) ) -> T0_init)
(stack b3 b4 h0 level4 level1 level5)
(_10_neg: (T0_init ( (! (holding(b0,h0))) ) -> T0_init)
(put-down b2 h1 level2 level1 level3)
(_10_neg: (T0_init ( (! (holding(b0,h0))) ) -> T0_init)
(unstack b5 b0 h1 level1 level1 level2)
(_10_neg: (T0_init ( (! (holding(b0,h0))) ) -> T0_init)
(stack b5 b3 h1 level0 level1 level1)
(_10_neg: (T0_init ( (! (holding(b0,h0))) ) -> T0_init)
(pick-up b2 h0 level3 level1 level4)
(_10_neg: (T0_init ( (! (holding(b0,h0))) ) -> T0_init)
(stack b2 b5 h0 level2 level1 level3)
(_10_neg: (T0_init ( (! (holding(b0,h0))) ) -> T0_init)
(pick-up b0 h0 level1 level1 level2)
(_10_neg: (T0_init (holding(b0,h0)) -> accept_all)
(put-down b0 h0 level0 level1 level1)
(_10_neg: (accept_all (true) -> accept_all)
; cost = 25 (unit cost)
