(_13_neg: (accept_init (( (! (in(p3,t1)))  && ( (! (in(p1,t0)))  &&  (! (at(p3,l3))) ))) -> accept_init)
(load p1 t1 l4)
(_13_neg: (accept_init (( (! (in(p3,t1)))  && ( (! (in(p1,t0)))  &&  (! (at(p3,l3))) ))) -> accept_init)
(drive t1 l4 l2 level16 level2 level18)
(_13_neg: (accept_init (( (! (in(p3,t1)))  && ( (! (in(p1,t0)))  &&  (! (at(p3,l3))) ))) -> accept_init)
(unload p1 t1 l2)
(_13_neg: (accept_init (( (! (in(p3,t1)))  && ( (! (in(p1,t0)))  &&  (! (at(p3,l3))) ))) -> accept_init)
(drive t1 l2 l0 level15 level1 level16)
(_13_neg: (accept_init (( (! (in(p3,t1)))  && ( (! (in(p1,t0)))  &&  (! (at(p3,l3))) ))) -> accept_init)
(load p0 t1 l0)
(_13_neg: (accept_init (( (! (in(p3,t1)))  && ( (! (in(p1,t0)))  &&  (! (at(p3,l3))) ))) -> accept_init)
(drive t1 l0 l2 level14 level1 level15)
(_13_neg: (accept_init (( (! (in(p3,t1)))  && ( (! (in(p1,t0)))  &&  (! (at(p3,l3))) ))) -> accept_init)
(drive t1 l2 l0 level13 level1 level14)
(_13_neg: (accept_init (( (! (in(p3,t1)))  && ( (! (in(p1,t0)))  &&  (! (at(p3,l3))) ))) -> accept_init)
(drive t1 l0 l2 level12 level1 level13)
(_13_neg: (accept_init (( (! (in(p3,t1)))  && ( (! (in(p1,t0)))  &&  (! (at(p3,l3))) ))) -> accept_init)
(drive t1 l2 l1 level7 level5 level12)
(_13_neg: (accept_init (( (! (in(p3,t1)))  && ( (! (in(p1,t0)))  &&  (! (at(p3,l3))) ))) -> accept_init)
(load p3 t1 l1)
(_13_neg: (accept_init ((in(p3,t1) && ( (! (in(p1,t0)))  &&  (! (at(p3,l3))) ))) -> accept_S1)
(load p2 t1 l1)
(_13_neg: (accept_S1 (( (! (in(p1,t0)))  &&  (! (at(p3,l3))) )) -> accept_S1)
(unload p0 t1 l1)
(_13_neg: (accept_S1 (( (! (in(p1,t0)))  &&  (! (at(p3,l3))) )) -> accept_S1)
(drive t1 l1 l2 level2 level5 level7)
(_13_neg: (accept_S1 (( (! (in(p1,t0)))  &&  (! (at(p3,l3))) )) -> accept_S1)
(unload p3 t1 l2)
(_13_neg: (accept_S1 (( (! (in(p1,t0)))  &&  (! (at(p3,l3))) )) -> accept_S1)
(drive t1 l2 l0 level1 level1 level2)
(_13_neg: (accept_S1 (( (! (in(p1,t0)))  &&  (! (at(p3,l3))) )) -> accept_S1)
(unload p2 t1 l0)
(_13_neg: (accept_S1 (( (! (in(p1,t0)))  &&  (! (at(p3,l3))) )) -> accept_S1)
; cost = 33 (unit cost)
