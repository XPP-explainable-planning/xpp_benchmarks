(_25_neg: (accept_init ( (! (loaded(goods1,truck1))) ) -> accept_init)
(drive truck1 depot0 market1 level13 level3 level10)
(_25_neg: (accept_init ( (! (loaded(goods1,truck1))) ) -> accept_init)
(drive truck1 market1 market0 level10 level3 level7)
(_25_neg: (accept_init ( (! (loaded(goods1,truck1))) ) -> accept_init)
(buy truck0 goods3 market0 level15 level3 level12)
(_25_neg: (accept_init ( (! (loaded(goods1,truck1))) ) -> accept_init)
(load goods3 truck1 market0)
(_25_neg: (accept_init ( (! (loaded(goods1,truck1))) ) -> accept_init)
(buy truck0 goods2 market0 level12 level5 level7)
(_25_neg: (accept_init ( (! (loaded(goods1,truck1))) ) -> accept_init)
(load goods2 truck1 market0)
(_25_neg: (accept_init ( (! (loaded(goods1,truck1))) ) -> accept_init)
(buy truck0 goods0 market0 level7 level2 level5)
(_25_neg: (accept_init ( (! (loaded(goods1,truck1))) ) -> accept_init)
(load goods0 truck1 market0)
(_25_neg: (accept_init ( (! (loaded(goods1,truck1))) ) -> accept_init)
(drive truck1 market0 market1 level7 level3 level4)
(_25_neg: (accept_init ( (! (loaded(goods1,truck1))) ) -> accept_init)
(buy truck0 goods1 market1 level5 level4 level1)
(_25_neg: (accept_init ( (! (loaded(goods1,truck1))) ) -> accept_init)
(load goods1 truck1 market1)
(_25_neg: (accept_init ((( (! (at(truck0,depot0)))  && loaded(goods1,truck1)) || ( (! (available(goods1,market2)))  && loaded(goods1,truck1)))) -> accept_S0)
(drive truck1 market1 depot0 level4 level3 level1)
(_25_neg: (accept_S0 (( (! (at(truck0,depot0)))  ||  (! (available(goods1,market2))) )) -> accept_S0)
(unload truck1 goods3 depot0)
(_25_neg: (accept_S0 (( (! (at(truck0,depot0)))  ||  (! (available(goods1,market2))) )) -> accept_S0)
(unload truck1 goods0 depot0)
(_25_neg: (accept_S0 (( (! (at(truck0,depot0)))  ||  (! (available(goods1,market2))) )) -> accept_S0)
(unload truck1 goods1 depot0)
(_25_neg: (accept_S0 (( (! (at(truck0,depot0)))  ||  (! (available(goods1,market2))) )) -> accept_S0)
(unload truck1 goods2 depot0)
(_25_neg: (accept_S0 (( (! (at(truck0,depot0)))  ||  (! (available(goods1,market2))) )) -> accept_S0)
; cost = 33 (unit cost)
